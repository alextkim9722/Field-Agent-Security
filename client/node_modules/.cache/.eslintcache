[{"/Users/alexanderkim/Documents/Repositories/field-agent-react/client/src/index.js":"1","/Users/alexanderkim/Documents/Repositories/field-agent-react/client/src/App.js":"2","/Users/alexanderkim/Documents/Repositories/field-agent-react/client/src/components/FieldAgents.js":"3","/Users/alexanderkim/Documents/Repositories/field-agent-react/client/src/components/UpdateFieldAgent.js":"4","/Users/alexanderkim/Documents/Repositories/field-agent-react/client/src/components/AddFieldAgent.js":"5","/Users/alexanderkim/Documents/Repositories/field-agent-react/client/src/components/DeleteFieldAgent.js":"6","/Users/alexanderkim/Documents/Repositories/field-agent-security/client/src/index.js":"7","/Users/alexanderkim/Documents/Repositories/field-agent-security/client/src/App.js":"8","/Users/alexanderkim/Documents/Repositories/field-agent-security/client/src/components/FieldAgents.js":"9","/Users/alexanderkim/Documents/Repositories/field-agent-security/client/src/components/AddFieldAgent.js":"10","/Users/alexanderkim/Documents/Repositories/field-agent-security/client/src/components/UpdateFieldAgent.js":"11","/Users/alexanderkim/Documents/Repositories/field-agent-security/client/src/components/DeleteFieldAgent.js":"12","/Users/alexanderkim/Documents/Repositories/field-agent-security/client/src/AuthContext.js":"13","/Users/alexanderkim/Documents/Repositories/field-agent-security/client/src/components/NotFound.js":"14","/Users/alexanderkim/Documents/Repositories/field-agent-security/client/src/components/Login.js":"15","/Users/alexanderkim/Documents/Repositories/field-agent-security/client/src/components/Errors.js":"16","/Users/alexanderkim/Documents/Repositories/field-agent-security/client/src/components/NavBar.js":"17"},{"size":254,"mtime":1650858211721,"results":"18","hashOfConfig":"19"},{"size":344,"mtime":1650858122703,"results":"20","hashOfConfig":"19"},{"size":3504,"mtime":1650912394954,"results":"21","hashOfConfig":"19"},{"size":3579,"mtime":1650912537574,"results":"22","hashOfConfig":"19"},{"size":3377,"mtime":1650902097504,"results":"23","hashOfConfig":"19"},{"size":1139,"mtime":1650862910896,"results":"24","hashOfConfig":"19"},{"size":343,"mtime":1651456543467,"results":"25","hashOfConfig":"26"},{"size":3027,"mtime":1651472525038,"results":"27","hashOfConfig":"26"},{"size":2280,"mtime":1651472508601,"results":"28","hashOfConfig":"26"},{"size":3621,"mtime":1651472539890,"results":"29","hashOfConfig":"26"},{"size":4530,"mtime":1651472546251,"results":"30","hashOfConfig":"26"},{"size":2567,"mtime":1651472551280,"results":"31","hashOfConfig":"26"},{"size":109,"mtime":1651456907728,"results":"32","hashOfConfig":"26"},{"size":159,"mtime":1651458202028,"results":"33","hashOfConfig":"26"},{"size":2345,"mtime":1651462040567,"results":"34","hashOfConfig":"26"},{"size":363,"mtime":1651457809707,"results":"35","hashOfConfig":"26"},{"size":1401,"mtime":1651472515598,"results":"36","hashOfConfig":"26"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1yv7a26",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"ewawpo",{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/Users/alexanderkim/Documents/Repositories/field-agent-react/client/src/index.js",[],[],[],"/Users/alexanderkim/Documents/Repositories/field-agent-react/client/src/App.js",[],[],"/Users/alexanderkim/Documents/Repositories/field-agent-react/client/src/components/FieldAgents.js",[],[],"/Users/alexanderkim/Documents/Repositories/field-agent-react/client/src/components/UpdateFieldAgent.js",[],[],"/Users/alexanderkim/Documents/Repositories/field-agent-react/client/src/components/AddFieldAgent.js",[],[],"/Users/alexanderkim/Documents/Repositories/field-agent-react/client/src/components/DeleteFieldAgent.js",[],[],"/Users/alexanderkim/Documents/Repositories/field-agent-security/client/src/index.js",[],[],[],"/Users/alexanderkim/Documents/Repositories/field-agent-security/client/src/App.js",["95"],[],"import NavBar from \"./components/NavBar\";\nimport FieldAgents from \"./components/FieldAgents\";\nimport Add from \"./components/AddFieldAgent\";\nimport Update from \"./components/UpdateFieldAgent\";\nimport Delete from \"./components/DeleteFieldAgent\";\nimport NotFound from \"./components/NotFound\";\nimport Login from \"./components/Login\";\nimport AuthContext from \"./AuthContext\";\n\nimport { Route, Switch } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport jwtDecode from \"jwt-decode\";\n\nconst TOKEN = 'jwt_token';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [authManager, setAuthManager] = useState({\n    user: null,\n    roles: null,\n    login(token) {\n      if (!this.user) {\n        const userData = jwtDecode(token);\n        localStorage.setItem(TOKEN, token);\n        setAuthManager((prevState) => ({...prevState, user: userData.sub, roles: userData.authorities}));\n      }\n    },\n    logout() {\n      if (this.user) {\n        localStorage.removeItem(TOKEN);\n        setAuthManager((prevState) => ({...prevState, user: null, roles: null}));\n      }\n    },\n    hasRole(role) {\n      return this.roles && this.roles.split(',').includes(`ROLE_${role.toUpperCase()}`);\n    }\n  });\n\n  useEffect(() => {\n    const token = localStorage.getItem(TOKEN);\n    if (token) {\n      authManager.login(token);\n    }\n    setInit(true);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {init ? \n      (<AuthContext.Provider value={authManager} >\n        <NavBar />\n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/about\">\n              <About />\n            </Route>\n\n            <Route exact path=\"/agents\" >\n              <FieldAgents />\n            </Route>\n            <Route exact path=\"/agents/add\" >\n              {authManager.user ? <Add /> : <Redirect to=\"/login\" /> }\n            </Route>\n            <Route exact path=\"/agents/edit/:id\" >\n              {authManager.user ? <Update />  : <Redirect to=\"/login\" /> }\n            </Route>\n            <Route exact path=\"/agents/delete/:id\" >\n              {authManager.hasRole('admin')  ? <Delete />  : <Redirect to=\"/login\" /> }\n            </Route>\n            <Route exact path=\"/login\" >\n              {authManager.user ? <Redirect to=\"/\" /> : <Login />}\n            </Route>\n            <Route>\n              <NotFound />\n            </Route>\n          </Switch>   \n        </div>\n      </AuthContext.Provider>) : null}\n    </div>\n  );\n}\n\nfunction Home() {\n  return (\n    <>\n      <h2>Home</h2>\n      <div>\n        <p>Welcome to the Field Agents app, agent.</p>\n      </div>\n    </>\n  )\n}\n\nfunction About() {\n  return (\n    <>\n      <h2>About</h2>\n      <div>\n        <p>About the Creator</p>\n        <ul>\n          <li>A young man trying to hone his skills in programming and become the master coder.</li>\n        </ul>\n      </div>\n    </>\n  )\n}\n\n\nexport default App;\n",[],"/Users/alexanderkim/Documents/Repositories/field-agent-security/client/src/components/FieldAgents.js",[],[],"/Users/alexanderkim/Documents/Repositories/field-agent-security/client/src/components/AddFieldAgent.js",[],[],"/Users/alexanderkim/Documents/Repositories/field-agent-security/client/src/components/UpdateFieldAgent.js",["96"],[],"import AuthContext from \"../AuthContext\";\nimport Errors from \"./Errors\";\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction UpdateFieldAgent() {\n\n  const [firstName, setFirstName] = useState('');\n  const [middleName, setMiddleName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [dob, setDob] = useState(null);\n  const [heightInInches, setHeightInInches] = useState(0);\n  const [errors, setErrors] = useState([]);\n  const [init, setInit] = useState(false);\n\n  const history = useHistory();\n  const authManager = useContext(AuthContext);\n  const { id } = useParams();\n\n  const handleFirstNameChange = (event) => {\n    setFirstName(event.target.value);\n  }\n\n  const handleMiddleNameChange = (event) => {\n    setMiddleName(event.target.value);\n  }\n\n  const handleLastNameChange = (event) => {\n    setLastName(event.target.value);\n  }\n\n  const handleDoBChange = (event) => {\n    setDob(event.target.value);\n  }\n\n  const handleHeightInInchesChange = (event) => {\n    setHeightInInches(event.target.value);\n  }\n\n  useEffect(() => {\n    fetch(`http://localhost:8080/api/agent/${id}`)\n      .then(response => {\n        if (response.status === 200) {\n          return response.json();\n        }\n\n        if (response.status === 404) {\n          history.update('/not-found');\n          return null;\n        }\n\n        return Promise.reject('Something went wrong on the server :)');\n      })\n      .then(body => {\n        if (body) {\n          setInit(true);\n          setFirstName(body.firstName);\n          setMiddleName(body.middleName);\n          setLastName(body.lastName);\n          setDob(body.dob);\n          setHeightInInches(body.heightInInches);\n        }\n      })\n      .catch(err => console.error(err));\n  }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const updateFieldAgent = {\n      agentId: id,\n      firstName,\n      middleName,\n      lastName,\n      dob,\n      heightInInches\n    };\n\n    const init = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${localStorage.getItem('jwt_token')}`\n      },\n      body: JSON.stringify(updateFieldAgent)\n    };\n\n    fetch(`http://localhost:8080/api/agent/${id}`, init)\n      .then(response => {\n        switch (response.status) {\n          case 204:\n            return null;\n          case 400:\n            return response.json();\n          case 403:\n            authManager.logout();\n            history.push('/login');\n            break;\n          default:\n            return Promise.reject('Something went wrong on the server :)');\n        }\n      })\n      .then(body => {\n        if (!body) {\n          history.push('/agents');\n          return;\n        }\n\n        setErrors(body);\n      })\n      .catch(err => console.error(err));\n  }\n\n\n  return (\n    <>\n      {init ? (<>\n        <h2 className=\"mt-5\">Update FieldAgent</h2>\n        <form>\n          <div className=\"form-group\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input className=\"form-control\" type=\"text\" id=\"firstName\" name=\"firstName\" value={firstName} onChange={handleFirstNameChange} ></input>\n          <label htmlFor=\"middleName\">Middle Name:</label>\n          <input className=\"form-control\" type=\"text\" id=\"middleName\" name=\"middleName\" value={middleName} onChange={handleMiddleNameChange} ></input>\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input className=\"form-control\" type=\"text\" id=\"lastName\" name=\"lastName\" value={lastName} onChange={handleLastNameChange} ></input>\n          <label htmlFor=\"dob\">Date of Birth:</label>\n          <input className=\"form-control\" type=\"date\" id=\"dob\" name=\"dob\" value={dob} onChange={handleDoBChange} ></input>\n          <label htmlFor=\"heightInInches\">Height in Inches:</label>\n          <input className=\"form-control\" type=\"number\" id=\"heightInInches\" name=\"heightInInches\" value={heightInInches} onChange={handleHeightInInchesChange} ></input>\n          </div>\n          <div className=\"form-group\">\n            <button className=\"btn btn-primary\" type=\"submit\" onClick={handleSubmit}>Update FieldAgent</button>\n            &nbsp;\n            <button className=\"btn btn-secondary\" type=\"button\" onClick={() => history.push('/agents')}>Cancel</button>\n          </div>\n        </form>\n        <Errors errors={errors} />\n      </>) : null}\n    </>\n  )\n\n}\n\nexport default UpdateFieldAgent;","/Users/alexanderkim/Documents/Repositories/field-agent-security/client/src/components/DeleteFieldAgent.js",["97"],[],"import { useHistory, useParams } from 'react-router-dom';\nimport { useContext, useEffect, useState } from 'react';\nimport AuthContext from '../AuthContext';\n\nfunction DeleteFieldAgent() {\n\n  const [firstName, setFirstName] = useState('');\n  const [middleName, setMiddleName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [dob, setDob] = useState(null);\n  const [heightInInches, setHeightInInches] = useState(0);\n  const [init, setInit] = useState(false);\n\n  const history = useHistory();\n  const { id } = useParams();\n  const authManager = useContext(AuthContext);\n\n  useEffect(() => {\n    fetch(`http://localhost:8080/api/agent/${id}`)\n      .then(response => {\n        if (response.status === 200) {\n          return response.json();\n        }\n\n        if (response.status === 404) {\n          history.replace('/not-found');\n          return null;\n        }\n\n        return Promise.reject('Something went wrong on the server :)');\n      })\n      .then(body => {\n        if (body) {\n          setInit(true);\n          setFirstName(body.firstName);\n          setMiddleName(body.middleName);\n          setLastName(body.lastName);\n          setDob(body.dob);\n          setHeightInInches(body.heightInInches);\n        }\n      })\n      .catch(err => console.error(err));\n  }, []);\n\n  const handleSubmit = () => {\n\n    const init = {\n      method: 'DELETE',\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('jwt_token')}`\n      }\n    }\n    \n    fetch(`http://localhost:8080/api/agent/${id}`, init)\n      .then(response => {\n        if (response.status === 204) {\n          history.push('/agents');\n          return;\n        } else if (response.status === 403) {\n          authManager.logout();\n          history.push('/login');\n        }\n\n        return Promise.reject('Something went wrong :)');\n      })\n      .catch(err => console.error(err));\n  }\n\n  return (\n    <>\n      {init ? (<>\n        <h2>FieldAgent Delete</h2>\n        <div className=\"alert alert-warning\">\n          <div>Are you sure you want to delete this todo?</div>\n          <div>FieldAgent: {firstName + \" \" + middleName + \" \" + lastName}</div>\n          <div>Date of Birth: {dob}</div>\n          <div>Height in Inches: {heightInInches}</div>\n        </div>\n        <button className=\"btn btn-primary\" type=\"button\" onClick={handleSubmit}>Delete</button>\n        &nbsp;\n        <button className=\"btn btn-secondary\" type=\"button\" onClick={() => history.push('/agents')}>Cancel</button>\n      </>) : null}\n    </>\n  );\n\n\n}\n\nexport default DeleteFieldAgent;","/Users/alexanderkim/Documents/Repositories/field-agent-security/client/src/AuthContext.js",[],[],"/Users/alexanderkim/Documents/Repositories/field-agent-security/client/src/components/NotFound.js",[],[],"/Users/alexanderkim/Documents/Repositories/field-agent-security/client/src/components/Login.js",["98"],[],"import { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthContext from \"../AuthContext\";\nimport Errors from \"./Errors\";\n\nconst DEFAULT_LOGIN = {\n  username: '',\n  password: ''\n}\n\nfunction Login() {\n\n  const [credentials, setCredentials] = useState(DEFAULT_LOGIN);\n  const [errors, setErrors] = useState([]);\n\n  const authManager = useContext(AuthContext);\n  const history = useHistory();\n\n  const handleChange = (event) => {\n    const replacmentCredentials = { ...credentials };\n\n    replacmentCredentials[event.target.name] = event.target.value;\n\n    setCredentials(replacmentCredentials);\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const init = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    }\n\n    const resp = await fetch('http://localhost:8080/api/authenticate', init)\n      .then(resp => {\n        console.log(resp);\n        if (resp.status === 200) {\n          return resp.json();\n        }\n\n        if (resp.status === 403) {\n          return null;\n        }\n\n        return Promise.reject('Something went wrong on the server :)');\n      })\n      .then(json => {\n        console.log(json.jwt_token);\n        if (json) {\n          authManager.login(json.jwt_token);\n          history.push(\"/\");\n        } else {\n          setErrors(['The supplied login information does not appear to be in our system.'])\n        }\n      })\n      .catch(err => console.error(err));\n  }\n\n  return (\n    <>\n      <h2>Login</h2>\n      <form>\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Username:</label>\n          <input className=\"form-control\" type=\"text\" id=\"username\" name=\"username\" value={credentials.username} onChange={handleChange} ></input>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password:</label>\n          <input className=\"form-control\" type=\"password\" id=\"password\" name=\"password\" value={credentials.password} onChange={handleChange} ></input>\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn btn-primary\" type=\"submit\" onClick={handleSubmit}>Login</button>\n        </div>\n      </form>\n      <Errors errors={errors}/>\n    </>\n  )\n\n}\n\nexport default Login;","/Users/alexanderkim/Documents/Repositories/field-agent-security/client/src/components/Errors.js",[],[],"/Users/alexanderkim/Documents/Repositories/field-agent-security/client/src/components/NavBar.js",[],[],{"ruleId":"99","severity":1,"message":"100","line":46,"column":6,"nodeType":"101","endLine":46,"endColumn":8,"suggestions":"102"},{"ruleId":"99","severity":1,"message":"103","line":67,"column":6,"nodeType":"101","endLine":67,"endColumn":8,"suggestions":"104"},{"ruleId":"99","severity":1,"message":"103","line":43,"column":6,"nodeType":"101","endLine":43,"endColumn":8,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":38,"column":11,"nodeType":"108","messageId":"109","endLine":38,"endColumn":15},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authManager'. Either include it or remove the dependency array.","ArrayExpression",["110"],"React Hook useEffect has missing dependencies: 'history' and 'id'. Either include them or remove the dependency array.",["111"],["112"],"no-unused-vars","'resp' is assigned a value but never used.","Identifier","unusedVar",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},{"desc":"115","fix":"117"},"Update the dependencies array to be: [authManager]",{"range":"118","text":"119"},"Update the dependencies array to be: [history, id]",{"range":"120","text":"121"},{"range":"122","text":"121"},[1415,1417],"[authManager]",[1846,1848],"[history, id]",[1298,1300]]