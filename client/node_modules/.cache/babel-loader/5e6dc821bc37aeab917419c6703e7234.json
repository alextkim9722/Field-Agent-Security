{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderkim/Documents/Repositories/field-agent-security/client/src/components/Registration.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Errors from \"./Errors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DEFAULT_LOGIN = {\n  username: '',\n  password: '',\n  confirmation: ''\n};\n\nfunction Registration() {\n  _s();\n\n  const [credentials, setCredentials] = useState(DEFAULT_LOGIN);\n  const [errors, setErrors] = useState([]);\n  const history = useHistory();\n\n  const handleChange = event => {\n    // create a replacement\n    const replacmentCredentials = { ...credentials\n    };\n    replacmentCredentials[event.target.name] = event.target.value;\n    setCredentials(replacmentCredentials);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (credentials.password !== credentials.confirmation) {\n      setErrors(['Password and Confirmation Password do not match']);\n      return;\n    }\n\n    const init = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    };\n    fetch('http://localhost:8080/api/create_account', init).then(resp => {\n      if (resp.status === 201) {\n        return null;\n      }\n\n      if (resp.status === 400) {\n        return resp.json();\n      }\n\n      return Promise.reject('Something went wrong on the server :)');\n    }).then(json => {\n      if (json) {\n        setErrors(json);\n      } else {\n        history.push(\"/login\");\n      }\n    }).catch(err => console.error(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          id: \"username\",\n          name: \"username\",\n          value: credentials.username,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: credentials.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmation\",\n          children: \"Confirmation Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"password\",\n          id: \"confirmation\",\n          name: \"confirmation\",\n          value: credentials.confirmation,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"submit\",\n          onClick: handleSubmit,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Errors, {\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Registration, \"IDaogEaQ6yr+HIfL0x2Tk/nQKqQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = Registration;\nexport default Registration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"sources":["/Users/alexanderkim/Documents/Repositories/field-agent-security/client/src/components/Registration.js"],"names":["useState","useHistory","Errors","DEFAULT_LOGIN","username","password","confirmation","Registration","credentials","setCredentials","errors","setErrors","history","handleChange","event","replacmentCredentials","target","name","value","handleSubmit","preventDefault","init","method","headers","body","JSON","stringify","fetch","then","resp","status","json","Promise","reject","push","catch","err","console","error"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Errors from \"./Errors\";\n\nconst DEFAULT_LOGIN = {\n  username: '',\n  password: '',\n  confirmation: ''\n}\n\nfunction Registration() {\n\n  const [credentials, setCredentials] = useState(DEFAULT_LOGIN);\n  const [errors, setErrors] = useState([]);\n\n  const history = useHistory();\n\n  const handleChange = (event) => {\n    // create a replacement\n    const replacmentCredentials = { ...credentials };\n\n    replacmentCredentials[event.target.name] = event.target.value;\n\n    setCredentials(replacmentCredentials);\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    \n    if (credentials.password !== credentials.confirmation) {\n      setErrors(['Password and Confirmation Password do not match']);\n      return;\n    }\n\n    const init = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    }\n\n    fetch('http://localhost:8080/api/create_account', init)\n      .then(resp => {\n        if (resp.status === 201) {\n          return null;\n        }\n\n        if (resp.status === 400) {\n          return resp.json();\n        }\n\n        return Promise.reject('Something went wrong on the server :)');\n      })\n      .then(json => {\n        if (json) {\n          setErrors(json)\n        } else {\n          history.push(\"/login\");\n        }\n\n        \n      })\n      .catch(err => console.error(err));\n\n  }\n\n  return (\n    <>\n      <h2>Registration</h2>\n      <form>\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Username:</label>\n          <input className=\"form-control\" type=\"text\" id=\"username\" name=\"username\" value={credentials.username} onChange={handleChange} ></input>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password:</label>\n          <input className=\"form-control\" type=\"password\" id=\"password\" name=\"password\" value={credentials.password} onChange={handleChange} ></input>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"confirmation\">Confirmation Password:</label>\n          <input className=\"form-control\" type=\"password\" id=\"confirmation\" name=\"confirmation\" value={credentials.confirmation} onChange={handleChange} ></input>\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn btn-primary\" type=\"submit\" onClick={handleSubmit}>Register</button>\n        </div>\n      </form>\n      <Errors errors={errors}/>\n    </>\n  )\n\n}\n\nexport default Registration;"]},"metadata":{},"sourceType":"module"}