{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderkim/Documents/Repositories/field-agent-security/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport FieldAgents from \"./components/FieldAgents\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [init, setInit] = useState(false);\n  const [authManager, setAuthManager] = useState({\n    user: null,\n    roles: null,\n\n    login(token) {\n      if (!this.user) {\n        const userData = jwtDecode(token);\n        localStorage.setItem(TOKEN, token);\n        setAuthManager(prevState => ({ ...prevState,\n          user: userData.sub,\n          roles: userData.authorities\n        }));\n      }\n    },\n\n    logout() {\n      if (this.user) {\n        localStorage.removeItem(TOKEN);\n        setAuthManager(prevState => ({ ...prevState,\n          user: null,\n          roles: null\n        }));\n      }\n    },\n\n    hasRole(role) {\n      return this.roles && this.roles.split(',').includes(`ROLE_${role.toUpperCase()}`);\n    }\n\n  });\n  useEffect(() => {\n    const token = localStorage.getItem(TOKEN);\n\n    if (token) {\n      authManager.login(token);\n    }\n\n    setInit(true);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-dark bg-dark\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"navbar-brand\",\n        children: \"Field Agent App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(FieldAgents, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5ADx1PzM2Jd2izDITYusMA7/2gA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alexanderkim/Documents/Repositories/field-agent-security/client/src/App.js"],"names":["FieldAgents","App","init","setInit","useState","authManager","setAuthManager","user","roles","login","token","userData","jwtDecode","localStorage","setItem","TOKEN","prevState","sub","authorities","logout","removeItem","hasRole","role","split","includes","toUpperCase","useEffect","getItem"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,0BAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCF,QAAQ,CAAC;AAC7CG,IAAAA,IAAI,EAAE,IADuC;AAE7CC,IAAAA,KAAK,EAAE,IAFsC;;AAG7CC,IAAAA,KAAK,CAACC,KAAD,EAAQ;AACX,UAAI,CAAC,KAAKH,IAAV,EAAgB;AACd,cAAMI,QAAQ,GAAGC,SAAS,CAACF,KAAD,CAA1B;AACAG,QAAAA,YAAY,CAACC,OAAb,CAAqBC,KAArB,EAA4BL,KAA5B;AACAJ,QAAAA,cAAc,CAAEU,SAAD,KAAgB,EAAC,GAAGA,SAAJ;AAAeT,UAAAA,IAAI,EAAEI,QAAQ,CAACM,GAA9B;AAAmCT,UAAAA,KAAK,EAAEG,QAAQ,CAACO;AAAnD,SAAhB,CAAD,CAAd;AACD;AACF,KAT4C;;AAU7CC,IAAAA,MAAM,GAAG;AACP,UAAI,KAAKZ,IAAT,EAAe;AACbM,QAAAA,YAAY,CAACO,UAAb,CAAwBL,KAAxB;AACAT,QAAAA,cAAc,CAAEU,SAAD,KAAgB,EAAC,GAAGA,SAAJ;AAAeT,UAAAA,IAAI,EAAE,IAArB;AAA2BC,UAAAA,KAAK,EAAE;AAAlC,SAAhB,CAAD,CAAd;AACD;AACF,KAf4C;;AAgB7Ca,IAAAA,OAAO,CAACC,IAAD,EAAO;AACZ,aAAO,KAAKd,KAAL,IAAc,KAAKA,KAAL,CAAWe,KAAX,CAAiB,GAAjB,EAAsBC,QAAtB,CAAgC,QAAOF,IAAI,CAACG,WAAL,EAAmB,EAA1D,CAArB;AACD;;AAlB4C,GAAD,CAA9C;AAqBAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMhB,KAAK,GAAGG,YAAY,CAACc,OAAb,CAAqBZ,KAArB,CAAd;;AACA,QAAIL,KAAJ,EAAW;AACTL,MAAAA,WAAW,CAACI,KAAZ,CAAkBC,KAAlB;AACD;;AACDP,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GANQ,EAMN,EANM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,6BACE;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAzCQF,G;;KAAAA,G;AA2CT,eAAeA,GAAf","sourcesContent":["import FieldAgents from \"./components/FieldAgents\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [authManager, setAuthManager] = useState({\n    user: null,\n    roles: null,\n    login(token) {\n      if (!this.user) {\n        const userData = jwtDecode(token);\n        localStorage.setItem(TOKEN, token);\n        setAuthManager((prevState) => ({...prevState, user: userData.sub, roles: userData.authorities}));\n      }\n    },\n    logout() {\n      if (this.user) {\n        localStorage.removeItem(TOKEN);\n        setAuthManager((prevState) => ({...prevState, user: null, roles: null}));\n      }\n    },\n    hasRole(role) {\n      return this.roles && this.roles.split(',').includes(`ROLE_${role.toUpperCase()}`);\n    }\n  });\n\n  useEffect(() => {\n    const token = localStorage.getItem(TOKEN);\n    if (token) {\n      authManager.login(token);\n    }\n    setInit(true);\n  }, []);\n  \n  return (\n    <div className=\"App\">\n      <nav className=\"navbar navbar-dark bg-dark\">\n        <span className=\"navbar-brand\" >Field Agent App</span>\n      </nav>\n      <div className=\"container\">\n        <FieldAgents />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}