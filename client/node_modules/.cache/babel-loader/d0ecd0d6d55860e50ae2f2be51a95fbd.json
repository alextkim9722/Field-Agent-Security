{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderkim/Documents/Repositories/field-agent-react/client/src/components/UpdateFieldAgent.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DEFAULT_FIELDAGENT = {\n  agentId: 0,\n  firstName: '',\n  middleName: '',\n  lastName: '',\n  dob: '',\n  heightInInches: ''\n};\n\nfunction UpdateFieldAgent(_ref) {\n  _s();\n\n  let {\n    fieldAgent = DEFAULT_FIELDAGENT,\n    handleUpdate,\n    handleCancel\n  } = _ref;\n  const [firstName, setFirstName] = useState('');\n  const [middleName, setMiddleName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [dob, setDob] = useState('');\n  const [heightInInches, setHeightInInches] = useState('');\n  const [errors, setErrors] = useState([]);\n  let valid = true;\n\n  const handleFirstNameChange = event => {\n    setFirstName(event.target.value);\n  };\n\n  const handleMiddleNameChange = event => {\n    setMiddleName(event.target.value);\n  };\n\n  const handleLastNameChange = event => {\n    setLastName(event.target.value);\n  };\n\n  const handleDoBChange = event => {\n    setDob(event.target.value);\n  };\n\n  const handleHeightInInchesChange = event => {\n    setHeightInInches(event.target.value);\n  };\n\n  const checkForValidDate = event => {\n    let input = event.target.value;\n\n    if (input.charAt(4) !== '-' || input.charAt(7) !== '-' || isNaN(input.substring(0, 4)) || isNaN(input.substring(5, 7)) || isNaN(input.substring(8, 11)) || input.substring(0, 4) === '' || input.substring(5, 7) === '' || input.substring(8, 11) === '' || input.length === 11) {\n      if (isNaN(Date.parse(input))) {\n        alert(\"Date must be in YYYY-MM-DD format\");\n        valid = false;\n      }\n    } else {\n      valid = true;\n    }\n  };\n\n  const checkForHeightInInches = event => {\n    if (isNaN(event.target.value)) {\n      alert(\"Input must be a number.\");\n      valid = false;\n    } else {\n      valid = true;\n    }\n  };\n\n  const handleSubmit = event => {\n    if (valid) {\n      const updateFieldAgent = { ...fieldAgent,\n        firstName,\n        middleName,\n        lastName,\n        dob,\n        heightInInches\n      };\n      const init = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updateFieldAgent)\n      };\n      fetch(`http://localhost:8080/api/agent/${updateFieldAgent.agentId}`, init).then(response => {\n        if (response.status === 204) {\n          return null;\n        } else if (response.status === 400) {\n          return response.json();\n        }\n\n        return Promise.reject('Something went wrong on the server :)');\n      }).then(body => {\n        if (!body) {\n          handleUpdate(updateFieldAgent);\n          return;\n        }\n\n        setErrors(body);\n      }).catch(err => console.error(err));\n    } else {\n      alert(\"entries are not valid.\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-5\",\n      children: \"Update FieldAgent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"firstName\",\n          children: \"First Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          id: \"firstName\",\n          name: \"firstName\",\n          value: firstName,\n          onChange: handleFirstNameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"middleName\",\n          children: \"Middle Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          id: \"middleName\",\n          name: \"middleName\",\n          value: middleName,\n          onChange: handleMiddleNameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastName\",\n          children: \"Last Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          id: \"lastName\",\n          name: \"lastName\",\n          value: lastName,\n          onChange: handleLastNameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"dob\",\n          children: \"Date of Birth:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          id: \"dob\",\n          name: \"dob\",\n          value: dob,\n          onChange: handleDoBChange,\n          onBlur: checkForValidDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"heightInInches\",\n          children: \"Height in Inches:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          id: \"heightInInches\",\n          name: \"heightInInches\",\n          value: heightInInches,\n          onChange: handleHeightInInchesChange,\n          onBlur: checkForHeightInInches\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"submit\",\n          onClick: handleSubmit,\n          children: \"Update FieldAgent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          type: \"button\",\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), errors.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"The following Errors occurred:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: errors.map((err, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: err\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 39\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : null]\n  }, void 0, true);\n}\n\n_s(UpdateFieldAgent, \"1wP+ejekh/zPhef1yfZqwgNygC0=\");\n\n_c = UpdateFieldAgent;\nexport default UpdateFieldAgent;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateFieldAgent\");","map":{"version":3,"sources":["/Users/alexanderkim/Documents/Repositories/field-agent-react/client/src/components/UpdateFieldAgent.js"],"names":["useState","DEFAULT_FIELDAGENT","agentId","firstName","middleName","lastName","dob","heightInInches","UpdateFieldAgent","fieldAgent","handleUpdate","handleCancel","setFirstName","setMiddleName","setLastName","setDob","setHeightInInches","errors","setErrors","valid","handleFirstNameChange","event","target","value","handleMiddleNameChange","handleLastNameChange","handleDoBChange","handleHeightInInchesChange","checkForValidDate","input","charAt","isNaN","substring","length","Date","parse","alert","checkForHeightInInches","handleSubmit","updateFieldAgent","init","method","headers","body","JSON","stringify","fetch","then","response","status","json","Promise","reject","catch","err","console","error","map","i"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\nconst DEFAULT_FIELDAGENT = {\n  agentId: 0,\n  firstName: '',\n  middleName: '',\n  lastName: '',\n  dob: '',\n  heightInInches: ''\n};\n\nfunction UpdateFieldAgent({ fieldAgent = DEFAULT_FIELDAGENT, handleUpdate, handleCancel }) {\n\n  const [firstName, setFirstName] = useState('');\n  const [middleName, setMiddleName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [dob, setDob] = useState('');\n  const [heightInInches, setHeightInInches] = useState('');\n  const [errors, setErrors] = useState([]);\n\n  let valid = true;\n\n  const handleFirstNameChange = (event) => {\n    setFirstName(event.target.value);\n  }\n\n  const handleMiddleNameChange = (event) => {\n    setMiddleName(event.target.value);\n  }\n\n  const handleLastNameChange = (event) => {\n    setLastName(event.target.value);\n  }\n\n  const handleDoBChange = (event) => {\n    setDob(event.target.value);\n  }\n\n  const handleHeightInInchesChange = (event) => {\n    setHeightInInches(event.target.value);\n  }\n\n  const checkForValidDate = (event) => {\n    let input = event.target.value;\n    if(input.charAt(4) !== '-' || input.charAt(7) !== '-'\n    || isNaN(input.substring(0,4)) || isNaN(input.substring(5,7)) || isNaN(input.substring(8,11))\n    || input.substring(0,4) === '' || input.substring(5,7) === '' || input.substring(8,11) === ''\n    || input.length === 11) {\n      if(isNaN(Date.parse(input))){\n        alert(\"Date must be in YYYY-MM-DD format\");\n        valid = false;\n      }\n    }else{\n      valid = true;\n    }\n  }\n\n  const checkForHeightInInches = (event) => {\n    if(isNaN(event.target.value)) {\n      alert(\"Input must be a number.\")\n      valid = false;\n    }else{\n      valid = true;\n    }\n  }\n\n  const handleSubmit = (event) => {\n    if(valid){\n    const updateFieldAgent = {\n      ...fieldAgent,\n      firstName,\n      middleName,\n      lastName,\n      dob,\n      heightInInches\n    };\n\n    const init = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updateFieldAgent)\n    };\n\n    fetch(`http://localhost:8080/api/agent/${updateFieldAgent.agentId}`, init)\n      .then(response => {\n        if (response.status === 204) {\n          return null;\n        } else if (response.status === 400) {\n          return response.json();\n        }\n\n        return Promise.reject('Something went wrong on the server :)');\n      })\n      .then(body => {\n        if (!body) {\n          handleUpdate(updateFieldAgent);\n          return;\n        }\n\n        setErrors(body);\n      })\n      .catch(err => console.error(err));\n    }else{\n      alert(\"entries are not valid.\")\n    }\n  }\n\n\n  return (\n    <>\n      <h2 className=\"mt-5\">Update FieldAgent</h2>\n      <form>\n        <div className=\"form-group\">\n        <label htmlFor=\"firstName\">First Name:</label>\n          <input className=\"form-control\" type=\"text\" id=\"firstName\" name=\"firstName\" value={firstName} onChange={handleFirstNameChange} ></input>\n          <label htmlFor=\"middleName\">Middle Name:</label>\n          <input className=\"form-control\" type=\"text\" id=\"middleName\" name=\"middleName\" value={middleName} onChange={handleMiddleNameChange} ></input>\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input className=\"form-control\" type=\"text\" id=\"lastName\" name=\"lastName\" value={lastName} onChange={handleLastNameChange} ></input>\n          <label htmlFor=\"dob\">Date of Birth:</label>\n          <input className=\"form-control\" type=\"text\" id=\"dob\" name=\"dob\" value={dob} onChange={handleDoBChange} onBlur={checkForValidDate} ></input>\n          <label htmlFor=\"heightInInches\">Height in Inches:</label>\n          <input className=\"form-control\" type=\"text\" id=\"heightInInches\" name=\"heightInInches\" value={heightInInches} onChange={handleHeightInInchesChange} onBlur={checkForHeightInInches} ></input>\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn btn-primary\" type=\"submit\" onClick={handleSubmit}>Update FieldAgent</button>\n          &nbsp;\n          <button className=\"btn btn-secondary\" type=\"button\" onClick={handleCancel}>Cancel</button>\n        </div>\n      </form>\n      {errors.length ? (<>\n          <div className=\"alert alert-danger\">\n            <span>The following Errors occurred:</span>\n            <ul>\n              {errors.map((err, i) => <li key={i}>{err}</li>)}\n            </ul>\n          </div>\n        </>) : null}\n    </>\n  )\n\n}\n\nexport default UpdateFieldAgent;"]},"metadata":{},"sourceType":"module"}