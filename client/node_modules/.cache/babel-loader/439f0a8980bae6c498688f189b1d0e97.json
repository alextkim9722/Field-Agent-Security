{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderkim/Documents/Repositories/field-agent-security/client/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthContext from \"../AuthContext\";\nimport Errors from \"./Errors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DEFAULT_LOGIN = {\n  username: '',\n  password: ''\n};\n\nfunction Login() {\n  _s();\n\n  const [credentials, setCredentials] = useState(DEFAULT_LOGIN);\n  const [errors, setErrors] = useState([]);\n  const authManager = useContext(AuthContext);\n  const history = useHistory();\n\n  const handleChange = event => {\n    const replacmentCredentials = { ...credentials\n    };\n    replacmentCredentials[event.target.name] = event.target.value;\n    setCredentials(replacmentCredentials);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const init = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    };\n    const resp = await fetch('http://localhost:8080/api/authenticate', init);\n    const json = await resp.json().then(resp => {\n      console.log(resp);\n\n      if (resp.status === 200) {\n        return resp.json();\n      }\n\n      if (resp.status === 403) {\n        return null;\n      }\n\n      return Promise.reject('Something went wrong on the server :)');\n    }).then(json => {\n      console.log(json.jwt_token);\n\n      if (json) {\n        authManager.login(json.jwt_token);\n        history.push(\"/\");\n      } else {\n        setErrors(['The supplied login information does not appear to be in our system.']);\n      }\n    }).catch(err => console.error(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          id: \"username\",\n          name: \"username\",\n          value: credentials.username,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: credentials.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"submit\",\n          onClick: handleSubmit,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Errors, {\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Login, \"qI82vOzcRg006MJtmtcrWhrvAeo=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/alexanderkim/Documents/Repositories/field-agent-security/client/src/components/Login.js"],"names":["useContext","useState","useHistory","AuthContext","Errors","DEFAULT_LOGIN","username","password","Login","credentials","setCredentials","errors","setErrors","authManager","history","handleChange","event","replacmentCredentials","target","name","value","handleSubmit","preventDefault","init","method","headers","body","JSON","stringify","resp","fetch","json","then","console","log","status","Promise","reject","jwt_token","login","push","catch","err","error"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthContext from \"../AuthContext\";\nimport Errors from \"./Errors\";\n\nconst DEFAULT_LOGIN = {\n  username: '',\n  password: ''\n}\n\nfunction Login() {\n\n  const [credentials, setCredentials] = useState(DEFAULT_LOGIN);\n  const [errors, setErrors] = useState([]);\n\n  const authManager = useContext(AuthContext);\n  const history = useHistory();\n\n  const handleChange = (event) => {\n    const replacmentCredentials = { ...credentials };\n\n    replacmentCredentials[event.target.name] = event.target.value;\n\n    setCredentials(replacmentCredentials);\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const init = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    }\n\n    const resp = await fetch('http://localhost:8080/api/authenticate', init);\n    const json = await resp.json()\n      .then(resp => {\n        console.log(resp);\n        if (resp.status === 200) {\n          return resp.json();\n        }\n\n        if (resp.status === 403) {\n          return null;\n        }\n\n        return Promise.reject('Something went wrong on the server :)');\n      })\n      .then(json => {\n        console.log(json.jwt_token);\n        if (json) {\n          authManager.login(json.jwt_token);\n          history.push(\"/\");\n        } else {\n          setErrors(['The supplied login information does not appear to be in our system.'])\n        }\n      })\n      .catch(err => console.error(err));\n  }\n\n  return (\n    <>\n      <h2>Login</h2>\n      <form>\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Username:</label>\n          <input className=\"form-control\" type=\"text\" id=\"username\" name=\"username\" value={credentials.username} onChange={handleChange} ></input>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password:</label>\n          <input className=\"form-control\" type=\"password\" id=\"password\" name=\"password\" value={credentials.password} onChange={handleChange} ></input>\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn btn-primary\" type=\"submit\" onClick={handleSubmit}>Login</button>\n        </div>\n      </form>\n      <Errors errors={errors}/>\n    </>\n  )\n\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}