{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderkim/Documents/Repositories/field-agent-react/client/src/components/AddFieldAgent.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AddFieldAgent(_ref) {\n  _s();\n\n  let {\n    handleAdd,\n    handleCancel\n  } = _ref;\n  const [description, setDescription] = useState('');\n  const [errors, setErrors] = useState([]);\n\n  const handleDescriptionChange = event => {\n    setDescription(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newFieldAgent = {\n      description\n    };\n    const init = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newFieldAgent)\n    };\n    fetch('http://localhost:8080/api/agent', init).then(response => {\n      if (response.status === 201 || response.status === 400) {\n        return response.json();\n      }\n\n      return Promise.reject('Something went wrong on the server :)');\n    }).then(json => {\n      // if we have an id, we know this is successful\n      if (json.id) {\n        handleAdd(json);\n      } else {\n        // errors\n        setErrors(json);\n      }\n    }).catch(err => console.error(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-5\",\n      children: \"Add FieldAgent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          id: \"description\",\n          name: \"description\",\n          value: description,\n          onChange: handleDescriptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"submit\",\n          onClick: handleSubmit,\n          children: \"Add FieldAgent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          type: \"button\",\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), errors.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"The following Errors occurred:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: errors.map((err, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: err\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 39\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : null]\n  }, void 0, true);\n}\n\n_s(AddFieldAgent, \"k5YlAXXwMRzuzTotcXRDkkH7sOQ=\");\n\n_c = AddFieldAgent;\nexport default AddFieldAgent;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddFieldAgent\");","map":{"version":3,"sources":["/Users/alexanderkim/Documents/Repositories/field-agent-react/client/src/components/AddFieldAgent.js"],"names":["useState","AddFieldAgent","handleAdd","handleCancel","description","setDescription","errors","setErrors","handleDescriptionChange","event","target","value","handleSubmit","preventDefault","newFieldAgent","init","method","headers","body","JSON","stringify","fetch","then","response","status","json","Promise","reject","id","catch","err","console","error","length","map","i"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\nfunction AddFieldAgent({ handleAdd, handleCancel }) {\n  const [description, setDescription] = useState('');\n  const [errors, setErrors] = useState([]);\n\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value);\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const newFieldAgent = {\n      description\n    };\n\n    const init = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newFieldAgent)\n    };\n\n    fetch('http://localhost:8080/api/agent', init)\n      .then(response => {\n        if (response.status === 201 || response.status === 400) {\n          return response.json();\n        }\n\n        return Promise.reject('Something went wrong on the server :)');\n      })\n      .then(json => {\n        // if we have an id, we know this is successful\n        if (json.id) {\n          handleAdd(json);\n        } else {\n          // errors\n          setErrors(json);\n        }\n      })\n      .catch(err => console.error(err));\n\n  }\n\n  return (\n    <>\n      <h2 className=\"mt-5\">Add FieldAgent</h2>\n      <form>\n        <div className=\"form-group\">\n          <label htmlFor=\"description\">Description:</label>\n          <input className=\"form-control\" type=\"text\" id=\"description\" name=\"description\" value={description} onChange={handleDescriptionChange} ></input>\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn btn-primary\" type=\"submit\" onClick={handleSubmit}>Add FieldAgent</button>\n          &nbsp;\n          <button className=\"btn btn-secondary\" type=\"button\" onClick={handleCancel}>Cancel</button>\n        </div>\n      </form>\n      {errors.length ? (<>\n          <div className=\"alert alert-danger\">\n            <span>The following Errors occurred:</span>\n            <ul>\n              {errors.map((err, i) => <li key={i}>{err}</li>)}\n            </ul>\n          </div>\n        </>) : null}\n    </>\n  )\n\n}\n\nexport default AddFieldAgent;"]},"metadata":{},"sourceType":"module"}